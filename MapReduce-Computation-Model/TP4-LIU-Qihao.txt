mongoimport --db tourPedia --collection paris --drop
--file /PATH/tourPedia_paris.json --port 27018

//1.partie:

show collections
db.paris.count()
//ex1:
db.paris.find()
//ex2:
db.paris.find({"contact.phone":{$exists:true}},{"name":1,"contact.phone":1})
//ex3:
db.paris.find({"name":{$regex:/hotel$/i}},{"name":1});
//ex4:
db.paris.find({"services":"chambres non-fumeurs"},{"name":1});
//ex5:
db.paris.find({"services":{"$size":5}},{"name":1,"services":1});
db.paris.find({"services.5":{$exists:true}},{"name":1,"services":1});
//ex6:
db.paris.find({"reviews.rating":{$gte:4}},{"location":1,"category":1});
//ex7:
db.paris.aggregate([
{$match:{"category":"accommodation","services":"blanchisserie"}},
{$group:{"_id":{"city":"$location.city"},"count":{"$sum":1}}}]);
//ex8:
db.paris.find({"reviews.source":"Facebook"},{"reviews.source":1,"name":1});
//ex9:
db.paris.distinct("reviews.source");
//ex10:
db.paris.aggregate(
{$unwind:"$reviews"},
{$group:{"_id":{"source":"$reviews.source"},"number_of_reviews":{"$sum":1}}}
);
//ex11:
db.paris.aggregate(
{$unwind:"$reviews"},
{$group:{"_id":{"category":"$category","language":"$reviews.language"},
"number_of_reviews":{"$sum":1}}}
);

//2.partie

//ex2
db.paris.createIndex({"services":1});
//numIndexesBefore est 1
db.paris.createIndex({"reviews.rating":1});
//numIndexesBefore est 2
//ex2:
db.paris.find({"services" : "chambres non-fumeurs",
"reviews.rating" : {$gte : 4}}).explain();
db.paris.aggregate([{$match:{"services" : "chambres non-fumeurs"}},
{$group:{_id:"$type", total : { $sum : 1}}}], {explain:true});
db.paris.createIndex({"services":1});
db.paris.createIndex({"reviews.rating":1});


db.paris.createIndex( { "location.coord" : "2dsphere" } );
var Eiffel= [2.294694,48.858093];
var Pyramide du Louvre = [2.338629,48.860294];
var Boulevard Saint Michel = [2.340839,48.847106];

db.paris.find(
   "location.coord": {
     $near: {
       $geometry: {
          "type": "Point" ,
          "coordinates": [2.294694,48.858093]
       },
       $maxDistance: 200,
       $minDistance: 0
     }
   }
);
//ex3:
db.paris.aggregate([
   {
     $geoNear: {
        near: { "type": "Point", coordinates: [2.294694,48.858093] },
        "distanceField": "location.coord",
        "maxDistance": 200,
        "spherical": true
     }
   },
{$match: {"category":'restaurant'}},
{$unwind: "$reviews"}, {$unwind: "$reviews.rating"},
{$group: {_id:"$name", average:{$avg:"$reviews.rating"}}},
{$sort: {average:1}}
])

//3.partie
//ex1:
var mapFunction = function () {
if( reviews.rating > 4 )
emit (this.name, this.reviews.language);
};
var reduceFunction = function (key, values) {
return count(distinct(values));
};
var queryParam = {query : {}, out : "num_language"};
db.paris.mapReduce (mapFunction, reduceFunction, queryParam);
db.num_language.find();